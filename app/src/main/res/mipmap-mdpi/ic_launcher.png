package phamthuc.android.eatitclient.Common;

import android.content.Context;
import android.content.res.Resources;
import android.graphics.Bitmap;
import android.graphics.Canvas;
import android.graphics.Color;
import android.graphics.Paint;
import android.graphics.Rect;
import android.graphics.RectF;
import android.graphics.drawable.Drawable;

import androidx.annotation.NonNull;
import androidx.core.content.ContextCompat;
import androidx.recyclerview.widget.ItemTouchHelper;
import androidx.recyclerview.widget.RecyclerView;

import java.util.List;

import phamthuc.android.eatitclient.Callback.MyButtonClickListener;

public class MySwipeHelper extends ItemTouchHelper.SimpleCallback {
    int buttonWidth;
    private RecyclerView recyclerView;
    private List<MyButton> buttonList;

    public class MyButton{
        private String text;
        private int imageResId, textSize, color, pos;
        private RectF clickRegion;
        private MyButtonClickListener listener;
        private Context context;
        private Resources resources;

        public MyButton(Context context, String text, int textSize, int imageResId, int color, MyButtonClickListener listener) {
            this.text = text;
            this.imageResId = imageResId;
            this.textSize = textSize;
            this.color = color;
            this.listener = listener;
            this.context = context;
        }

        public boolean onClick(float x, float y){
            if(clickRegion != null && clickRegion.contains( x, y )){
                listener.onClick( pos );
                return true;
            }
            return false;
        }

        public void onDraw(Canvas c, RectF rectF, int pos){
            Paint p = new Paint(  );
            p.setColor( color );
            c.drawRect( rectF, p );

            //Text
            p.setColor( Color.WHITE );
            p.setTextSize( textSize );

            Rect r = new Rect(  );
            float cHeight = rectF.height();
            float cWidth = rectF.width();
            p.setTextAlign( Paint.Align.LEFT );
            p.getTextBounds( text, 0, text.length(), r );
            float x= 0, y=0;
            if(imageResId == 0){
                x = cWidth/2f-r.width()/2f-r.left;
                y=cHeight/2f + r.height()/2f -r.bottom;
                c.drawText( text, rectF.left+x, rectF.top+y, p );
            }else{
                Drawable d = ContextCompat.getDrawable( context, imageResId );
                Bitmap bitmap = drawableToBitmap(d);
                c.drawBitmap( bit